Tip: to scroll up in tty: SHIFT+PAGEUP
As suggested, run strace /home/flag15/flag15
it looks like the program is looking for lib:
libc.so.6

a straight forward idea is to create libc.so.6 in /tmp folder and tell the program where the lib is.
from here: http://www.cprogramming.com/tutorial/shared-libraries-linux-gcc.html
we can find three different ways and from here: http://linux.die.net/man/3/dlopen
it says: 
	"If, at the time that the program was started, the environment variable LD_LIBRARY_PATH was defined to contain a colon-separated list of directories, then these are searched. (As a security measure this variable is ignored for set-user-ID and set-group-ID programs.)
	"

in /tmp folder make a shared library called libc.so.6 (see level15-1 for the source)
and
export LD_LIBRARY_PATH=/tmp/libc.so.6:$LD_LIBRARY_PATH
and run strace /home/flag15/flag15

it does't work
return messages:
	a relocation error, symbol system -- version GLIBC_2.0 not defined in libc.so.6 
	no version information available

because "As a security measure this variable is ignored for set-user-ID and set-group-ID programs"
We probably need to work on rpath instead of LD_LIBRARY_PATH (I didn't notice it before).

After searching for a while, it seems not easy to change the rpath for a compiled file (the rpath example in the ref above is applied when compiling a file)

After review the result of our first run again, it seems we can copy/create the lib file inside /var/tmp/flag15
																								/var/tmp/flag15/tls/....
																								/var/tmp/flag15/sse2/....
																							we can create libc.so.6 in any of these folder

run /home/flag15/flag15

It gives the same error as before

a relocation error, symbol system -- version GLIBC_2.0 not defined in libc.so.6 (this may caused by function/variable/tag/... name not founded)
no version information available

follow this here:http://www.pwntester.com/blog/2013/11/26/nebula-level15-write-up/
We can use LD_DEBUG to debug and find the stop point
LD_DEBUG ref: http://tech110.blog.51cto.com/438717/388132


run "LD_DEBUG=lib /home/flag15/flag15"
for the relication error there are something new: ....... symbol __cxa_finalize .....
looks like we need to create a __cxa_finalize in our function

update the code, compile and run again, then...... relocation error ........symbol system....... (we have system call in our program)
we need to either include system call in our lib path or write a system call function by ourselves.

1.	Write a system call function
	
2.  http://www.kroosec.com/2012/11/nebula-level15.html ----> http://linux.die.net/man/1/ld
	-Bstatic
	-dn
	-non_shared
	-static
	"This option can be used with -shared. Doing so means that a shared library is being created but that all of the library's external references must be resolved by pulling in entries from static libraries"

	follow the compile insctruction there and run again
	another relocation error, add __libc_start_main(void) to our program and run again
	It works.
	we can use system("/bin/getflag") to execute getflag but it will cause a segmentation fault.
	TODO:   http://linux.die.net/man/1/ld
			execl: http://linux.die.net/man/3/execl
			__libc_start_main: http://refspecs.linuxbase.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/baselib---libc-start-main-.html

updates:
	http://www.pwntester.com/blog/2013/11/26/nebula-level15-write-up/
	It use objdump to see what function is called from libc

