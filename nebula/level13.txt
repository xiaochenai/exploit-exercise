In order to pass this challenge we need to fake our uid to 1000
http://www.linuxquestions.org/questions/programming-9/faking-uids-917910/
#include <stdio.h>

int main()
{
    int uid;

    __asm__ ("mov $24, %%eax;"
        "int $0x80;" //System calls in Linux are done through int 0x80.
        "movl %%eax, %0;"
        : "=r"(uid));
             
    printf("uid: %i\n", uid);
    return 0;
}

24. sys_getuid

Syntax: int sys_getuid(void)

Source: kernel/sys.c

Action: get user identity
This approach has not been got done yet.

http://mips42.altervista.org/ld_preload.php
create libfake.c libfake.so target.c target in /tmp
LD_PRELOAD=./libfake.so ./target works, the uid is 1000
LD_PRELOAD=./libfake.so /home/flag13/flag13 does not work
cp ./libfake.so /home/flag13/   permission denied
cp /home/flag13/flag13 ./       flag13 is copied to /tmp
LD_PRELOAD=./libfake.so ./flag13
The token is in level13-1
Currently have no idea about why LD_PRELOAD=./libfake.so /home/flag13/flag13 doesn't work